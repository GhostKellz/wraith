# Wraith HTTP/3 + QUIC Configuration
# This example enables HTTP/3 with post-quantum cryptography

[server]
listen = ["0.0.0.0:80"]           # HTTP/1.1, HTTP/2
listen_tls = ["0.0.0.0:443"]      # HTTP/2, HTTP/3
listen_quic = ["0.0.0.0:443"]     # HTTP/3 over QUIC (UDP)
worker_threads = 0

[tls]
cert_dir = "/etc/wraith/certs"
acme_enabled = true
acme_email = "admin@example.com"
# Post-quantum cryptography (via zquic)
post_quantum = true
min_tls_version = "1.3"

[quic]
enabled = true
max_idle_timeout = "30s"
max_concurrent_streams = 100
# QUIC-specific settings
congestion_control = "bbr"        # bbr, cubic, reno
zero_rtt = true                   # 0-RTT for faster connection resumption

[http3]
enabled = true
# HTTP/3 priorities
priority_enabled = true

[logging]
level = "info"
format = "json"
output = "/var/log/wraith/access.log"

# Modern HTTP/3 backend
[[upstream]]
name = "http3_backend"
servers = [
  { host = "10.0.0.1:443", weight = 1, protocol = "http3" },
  { host = "10.0.0.2:443", weight = 1, protocol = "http3" },
]
load_balancing = "round_robin"
health_check = { interval = "10s", timeout = "5s", path = "/health", protocol = "http3" }

# Fallback HTTP/2 backend
[[upstream]]
name = "http2_fallback"
servers = [
  { host = "10.0.1.1:443", weight = 1, protocol = "http2" },
]
load_balancing = "round_robin"

# Route with protocol negotiation
[[route]]
host = "example.com"
path = "/"
upstream = "http3_backend"
fallback_upstream = "http2_fallback"  # Fallback if HTTP/3 fails
